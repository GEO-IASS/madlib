# Changelist for MADlib version 1.6 to 1.7

# This file contains all changes that were introduced in a new version of
# MADlib. This changelist is used by the upgrade script to detect what objects
# should be upgraded (while retaining all other objects from the previous version)

# New modules (actually .sql_in files) added in upgrade version
# For these files the sql_in code is retained as is with the functions in the
# file installed on the upgrade version. All other files (that don't have
# updates), are cleaned up to remove object replacements
new module:
    # ----------------- Changes from 1.6 to 1.6.0S ----------
    # ----------------- Changes from 1.6.0S to 1.7 ----------
    glm:
    multiresponseglm:
    ordinal:
    decision_tree:
    random_forest:
    distribution:
    # ----------------- Changes from 1.7.1 to 1.8 ----------
    text_utilities:

# Changes in the types (UDT) including removal and modification
udt:
    # ----------------- Changes from 1.6 to 1.6.0S ----------
    # ----------------- Changes from 1.6.0S to 1.7 ----------
    bytea8:
    # ----------------- Changes from 1.8 to 1.9 ----------
    _prune_result_type:
    _tree_result_type:
    linear_svm_result:

# List of the UDF changes that affect the user externally. This includes change
# in function name, return type, argument order or types, or removal of
# the function. In each case, the original function is as good as removed and a
# new function is created. In such cases, we should abort the upgrade if there
# are user views dependent on this function, since the original function will
# not be present in the upgraded version.
udf:
    # ----------------- Changes from 1.6 to 1.6.0S ----------
    # ----------------- Changes from 1.6.0S to 1.7 ----------
    - cross_validation_general:   # change in name of argument "fold_num"
        rettype: void
        argument: character varying, character varying[], character varying[], character varying, character varying[], character varying, character varying[], character varying[], character varying, character varying[], character varying[], character varying, character varying, boolean, character varying, character varying[], integer
    - lmf_igd_transition:
        rettype: double precision[]
        argument: double precision[], smallint, smallint, double precision, double precision[], smallint, smallint, smallint, double precision, double precision
    # depending on bytea8
    # return type is bytea8
    - __clustered_err_lin_merge:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, schema_madlib.bytea8
    - __clustered_err_lin_transition:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, double precision, double precision[], double precision[]
    - __clustered_err_log_merge:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, schema_madlib.bytea8
    - __clustered_err_log_transition:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, boolean, double precision[], double precision[]
    - __clustered_err_mlog_merge:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, schema_madlib.bytea8
    - __clustered_err_mlog_transition:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, integer, double precision[], double precision[], integer, integer
    - dense_residual_norm_merge_states:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, schema_madlib.bytea8
    - dense_residual_norm_transition:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, double precision[], double precision, double precision[]
    - hetero_linregr_merge_states:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, schema_madlib.bytea8
    - hetero_linregr_transition:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, double precision, double precision[], double precision[]
    - linregr_merge_states:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, schema_madlib.bytea8
    - linregr_transition:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, double precision, double precision[]
    - robust_linregr_merge_states:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, schema_madlib.bytea8
    - robust_linregr_transition:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, double precision, double precision[], double precision[]
    - weighted_sample_merge_int64:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, schema_madlib.bytea8
    - weighted_sample_merge_vector:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, schema_madlib.bytea8
    - weighted_sample_transition_int64:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, bigint, double precision
    - weighted_sample_transition_vector:
        rettype: schema_madlib.bytea8
        argument: schema_madlib.bytea8, double precision[], double precision
    # argument type bytea8
    - __clustered_err_lin_final:
        rettype: schema_madlib.__clustered_agg_result
        argument: schema_madlib.bytea8
    - __clustered_err_log_final:
        rettype: schema_madlib.__clustered_agg_result
        argument: schema_madlib.bytea8
    - __clustered_err_mlog_final:
        rettype: schema_madlib.__clustered_agg_result
        argument: schema_madlib.bytea8
    - dense_residual_norm_final:
        rettype: schema_madlib.residual_norm_result
        argument: schema_madlib.bytea8
    - hetero_linregr_final:
        rettype: schema_madlib.heteroskedasticity_test_result
        argument: schema_madlib.bytea8
    - linregr_final:
        rettype: schema_madlib.linregr_result
        argument: schema_madlib.bytea8
    - robust_linregr_final:
        rettype: schema_madlib.robust_linregr_result
        argument: schema_madlib.bytea8
    - weighted_sample_final_int64:
        rettype: bigint
        argument: schema_madlib.bytea8
    - weighted_sample_final_vector:
        rettype: double precision[]
        argument: schema_madlib.bytea8
    # ----------------- Changes from 1.7.1 to 1.8 ----------
    - __filter_input_relation:
        rettype: character varying                                                         
        argument: character varying, character varying                                     
    - __lda_util_unnest:
        rettype: SETOF bigint[]                                                            
        argument: bigint[]                                                                 
    - matrix_block_mult:
        rettype: schema_madlib.matrix_result                                                             
        argument: text, text, text                                                         
    - matrix_block_square:
        rettype: schema_madlib.matrix_result
        argument: text, text
    - matrix_block_trans:
        rettype: schema_madlib.matrix_result
        argument: text, text
    - matrix_block_trans:
        rettype: schema_madlib.matrix_result
        argument: text, text, boolean
    - matrix_blockize:
        rettype: schema_madlib.matrix_result
        argument: text, integer, integer, text
    - matrix_densify:
        rettype: schema_madlib.matrix_result
        argument: text, text, text, text, text, boolean
    - matrix_mult:
        rettype: schema_madlib.matrix_result
        argument: text, boolean, text, boolean, text
    - matrix_mult:
        rettype: schema_madlib.matrix_result
        argument: text, text, text, text, boolean, text, text, text, text, boolean, text
    - matrix_norm:
        rettype: double precision
        argument: text
    - matrix_scale_and_add:
        rettype: void
        argument: text, text, double precision, text
    - matrix_sparsify:
        rettype: schema_madlib.matrix_result
        argument: text, text, boolean
    - matrix_square:
        rettype: schema_madlib.matrix_result
        argument: text, text
    - matrix_trans:
        rettype: schema_madlib.matrix_result
        argument: text, text, boolean
    - matrix_trans:
        rettype: schema_madlib.matrix_result
        argument: text, text, text, text, text, boolean
    - matrix_unblockize:
        rettype: schema_madlib.matrix_result
        argument: text, text
    # ----------------- Changes from 1.8 to 1.9 ----------
    - _dt_apply:
        rettype: madlib._tree_result_type
        argument: madlib.bytea8,madlib.bytea8,madlib.bytea8,smallint,smallint,smallint,boolean,integer

    - internal_linear_svm_igd_result:
        rettype: madlib.linear_svm_result
        argument: double precision[]

    - _prune_and_cplist:
        rettype: madlib._prune_result_type
        argument: madlib.bytea8,double precision,boolean

    - __svm_random_ind2:
        rettype: double precision[]
        argument: integer

    - __svm_random_ind:
        rettype: double precision[]
        argument: integer

    - __svm_target_cl_func:
        rettype: double precision
        argument: double precision[]

    - __svm_target_reg_func:
        rettype: double precision
        argument: double precision[]

    - correlation:
        rettype: correlation_result
        argument: character varying, character varying

    - correlation:
        rettype: correlation_result
        argument: character varying, character varying, character varying

    - correlation:
        rettype: correlation_result
        argument: character varying, character varying, character varying, boolean

    - linear_svm_igd_transition:
        rettype: double precision[]
        argument: double precision[], double precision[], boolean, double precision[], integer, double precision, double precision  | normal

    - lsvm_classification:
        rettype: SETOF lsvm_sgd_result
        argument: text, text

    - lsvm_classification:
        rettype: SETOF lsvm_sgd_result
        argument: text, text, boolean

    - lsvm_classification:
        rettype: SETOF lsvm_sgd_result
        argument: text, text, boolean, boolean, double precision, double precision

    - lsvm_classification:
        rettype: SETOF lsvm_sgd_result
        argument: text, text, boolean, boolean, double precision, double precision, integer

    - lsvm_predict:
        rettype: double precision
        argument: double precision[], double precision[]

    - lsvm_predict_batch:
        rettype: text
        argument: text, text, text, text, text

    - lsvm_predict_batch:
        rettype: text
        argument: text, text, text, text, text, boolean

    - matrix_block_trans:
        rettype: matrix_result
        argument: text, text, text, text, boolean

    - matrix_densify:
        rettype: matrix_result
        argument: text, text, text, text, boolean

    - matrix_sparsify:
        rettype: matrix_result
        argument: text, text, text, text, boolean

    - matrix_trans:
        rettype: matrix_result
        argument: text, text, text, text, boolean

    - svm_classification:
        rettype: SETOF svm_cls_result
        argument: text, text, boolean, text

    - svm_classification:
        rettype: SETOF svm_cls_result
        argument: text, text, boolean, text, boolean, double precision, double precision

    - svm_classification:
        rettype: SETOF svm_cls_result
        argument: text, text, boolean, text, boolean, double precision, double precision, double precision

    - svm_classification:
        rettype: SETOF svm_cls_result
        argument: text, text, boolean, text, double precision

    - svm_cls_update:
        rettype: svm_model_rec
        argument: svm_model_rec, double precision[], double precision, text, double precision, double precision, double precision

    - svm_data_normalization:
        rettype: void
        argument: text            

    - svm_dot:
        rettype: double precision
        argument: double precision[], double precision[]

    - svm_dot:
        rettype: double precision
        argument: double precision[], double precision[], double precision

    - svm_drop_model:
        rettype: void
        argument: text          

    - svm_gaussian:
        rettype: double precision
        argument: double precision[], double precision[], double precision

    - svm_generate_cls_data:
        rettype: void
        argument: text, integer, integer

    - svm_generate_nd_data:
        rettype: void
        argument: text, integer, integer

    - svm_generate_reg_data:
        rettype: void
        argument: text, integer, integer

    - svm_nd_update:
        rettype: svm_model_rec
        argument: svm_model_rec, double precision[], text, double precision, double precision, double precision

    - svm_novelty_detection:
        rettype: SETOF svm_nd_result
        argument: text, text, boolean, text

    - svm_novelty_detection:
        rettype: SETOF svm_nd_result
        argument: text, text, boolean, text, boolean, double precision, double precision

    - svm_novelty_detection:
        rettype: SETOF svm_nd_result
        argument: text, text, boolean, text, boolean, double precision, double precision, double precision

    - svm_polynomial:
        rettype: double precision
        argument: double precision[], double precision[], double precision

    - svm_predict:
        rettype: double precision
        argument: svm_model_rec, double precision[], text, double precision

    - svm_predict_batch:
        rettype: text
        argument: text, text, text, text, text, boolean

    - svm_predict_sub:
        rettype: double precision
        argument: integer, integer, double precision[], double precision[], double precision[], text, double precision

    - svm_reg_update:
        rettype: svm_model_rec
        argument: svm_model_rec, double precision[], double precision, text, double precision, double precision, double precision, double precision | normal

    - svm_regression:
        rettype: SETOF svm_reg_result
        argument: text, text, boolean, text

    - svm_regression:
        rettype: SETOF svm_reg_result
        argument: text, text, boolean, text, boolean, double precision, double precision, double precision

    - svm_regression:
        rettype: SETOF svm_reg_result
        argument: text, text, boolean, text, boolean, double precision, double precision, double precision, double precision

    - svm_store_model:
        rettype: void
        argument: text, text, text

# Changes to aggregates (UDA) including removal and modification
# Overloaded functions should be mentioned separately
uda:
    # ----------------- Changes from 1.6 to 1.6.0S ----------
    # ----------------- Changes from 1.6.0S to 1.7 ----------
    - lmf_igd_step:
        rettype: double precision[]
        argument: smallint, smallint, double precision, double precision[], smallint, smallint, smallint, double precision, double precision
    - __clustered_err_lin_step:
        rettype: schema_madlib.__clustered_agg_result
        argument: double precision, double precision[], double precision[]
    - __clustered_err_log_step:
        rettype: schema_madlib.__clustered_agg_result
        argument: boolean, double precision[], double precision[]
    - __clustered_err_mlog_step:
        rettype: schema_madlib.__clustered_agg_result
        argument: integer, double precision[], double precision[], integer, integer
    - dense_residual_norm:
        rettype: schema_madlib.residual_norm_result
        argument: double precision[], double precision, double precision[]
    - heteroskedasticity_test_linregr:
        rettype: schema_madlib.heteroskedasticity_test_result
        argument: double precision, double precision[], double precision[]
    - linregr:
        rettype: schema_madlib.linregr_result
        argument: double precision, double precision[]
    - robust_linregr:
        rettype: schema_madlib.robust_linregr_result
        argument: double precision, double precision[], double precision[]
    - weighted_sample:
        rettype: double precision[]
        argument: double precision[], double precision
    - weighted_sample:
        rettype: bigint
        argument: bigint, double precision
    # ----------------- Changes from 1.7.1 to 1.8 ----------
    - discrete_distribution_agg:
        rettype: double precision[]
        argument: integer, double precision, integer
    - vectorized_distribution_agg:
        rettype: double precision[]
        argument: integer[], integer[]
    # ----------------- Changes from 1.8 to 1.9 ----------
    - linear_svm_igd_step:
        rettype: double precision[]
        argument: double precision[], boolean, double precision[], integer, double precision, double precision

    - linear_svm_igd_step_serial:
        rettype: double precision[]
        argument: double precision[], boolean, double precision[], integer, double precision, double precision

    - svm_cls_agg:
        rettype: svm_model_rec
        argument: double precision[], double precision, text, double precision, double precision, double precision

    - svm_nd_agg:
        rettype: svm_model_rec
        argument: double precision[], text, double precision, double precision, double precision

    - svm_reg_agg:
        rettype: svm_model_rec
        argument: double precision[], double precision, text, double precision, double precision, double precision, double precision

    - __svm_random_ind2:
        rettype: double precision[]
        argument: integer  

# Casts (UDC) updated/removed
udc:
    # ----------------- Changes from 1.6 to 1.6.0S ----------
    # ----------------- Changes from 1.6.0S to 1.7 ----------

# Operators (UDO) removed/updated
udo:
    # ----------------- Changes from 1.6 to 1.6.0S ----------
    # ----------------- Changes from 1.6.0S to 1.7 ----------

# Operator Classes (UDOC) removed/updated
udoc:
    # ----------------- Changes from 1.6 to 1.6.0S ----------
    # ----------------- Changes from 1.6.0S to 1.7 ----------
